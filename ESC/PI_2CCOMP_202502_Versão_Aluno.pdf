Projeto Curso Turma
Projeto Interdisciplinar ‚Äì 2o Semestre, 2025
Ci√™ncia da Computa√ß√£o
Desenvolvimento Web Full
Stack
Tema T√≠tulo
Desenvolvimento de um Web Site Desenvolvimento de uma aplica√ß√£o web para o Projeto Lideran√ßas
Emp√°ticas, organiza√ß√£o voltada a causas sociais e
desenvolvimento humano.
Aplica√ß√£o Web ‚Äì Projeto Lideran√ßas Emp√°ticas
Projeto Interdisciplinar ‚Äì 2CCOMP ‚Äì 2¬∫ SEMESTRE 2025
1. Apresenta√ß√£o do Projeto
O Lideran√ßas Emp√°ticas √© uma iniciativa que une impacto social e educa√ß√£o empreendedora.
Por meio da arrecada√ß√£o de alimentos e recursos financeiros, alunos de gradua√ß√£o dos cursos
de Administra√ß√£o, Economia e Contabilidade desenvolvem a√ß√µes pr√°ticas que aplicam
conceitos de gest√£o, lideran√ßa e organiza√ß√£o.
A proposta deste projeto interdisciplinar √© desenvolver uma aplica√ß√£o web responsiva que
permita aos professores, mentores e alunos acompanharem e gerenciarem as atividades
realizadas pelas equipes participantes. A plataforma ser√° utilizada em edi√ß√µes semestrais e
dever√° contemplar o fluxo completo: desde o cadastro das equipes e atividades at√© a gera√ß√£o
de relat√≥rios de desempenho.
2. Objetivos
Objetivo Geral:
Desenvolver uma aplica√ß√£o web completa que permita o gerenciamento das edi√ß√µes do
projeto Lideran√ßas Emp√°ticas, com controle de equipes, atividades, metas e resultados,
apoiando a coordena√ß√£o e promovendo transpar√™ncia no acompanhamento das a√ß√µes.
Objetivos Espec√≠ficos:
‚Ä¢ Aplicar os conhecimentos de desenvolvimento web full stack utilizando arquitetura
cliente-servidor.
‚Ä¢ Modelar corretamente um banco de dados relacional para suportar as funcionalidades
do sistema.
‚Ä¢ Entender a din√¢mica organizacional do projeto e propor solu√ß√µes compat√≠veis com o
ambiente de gest√£o.
‚Ä¢ Incorporar princ√≠pios de design responsivo e boas pr√°ticas de desenvolvimento.
‚Ä¢ Produzir um sistema funcional com autentica√ß√£o, persist√™ncia de dados e gera√ß√£o de
relat√≥rios.


--- PAGE 1 ---

3. Requisitos Funcionais
‚Ä¢ Cadastro e gerenciamento das edi√ß√µes do projeto (Administrador)
‚Ä¢ Cadastro de participantes (alunos, professores e mentores), com auto cadastro para
alunos
‚Ä¢ Cria√ß√£o de equipes com m√∫ltiplos alunos e um mentor (Administrador)
‚Ä¢ Cadastro de tipos de atividade (ex: arrecada√ß√£o de alimentos, fundos etc.)
‚Ä¢ Registro de atividades por equipe com os seguintes campos: Tipo da atividade, Nome
da atividade, Data de in√≠cio e fim, Meta esperada, Unidade da meta, Valor arrecadado,
Valor de fundo utilizado
‚Ä¢ Gera√ß√£o de relat√≥rios: Geral de atividades, Por per√≠odo, Por equipe e por per√≠odo
4. Requisitos N√£o Funcionais
Desempenho
O sistema deve processar e exibir qualquer relat√≥rio em at√© 2 segundos com at√© 500
registros.
Seguran√ßa
Autentica√ß√£o obrigat√≥ria para todas as fun√ß√µes, com controle de acesso baseado em
perfil.
Usabilidade
Interface intuitiva e responsiva, adaptando-se a celulares e computadores.
Manutenibilidade
C√≥digo deve seguir padr√µes de organiza√ß√£o e ser devidamente comentado.
Compatibilidade
Suporte aos principais navegadores modernos (Chrome, Firefox, Edge).
Persist√™ncia
Todos os dados devem ser salvos em banco de dados relacional com integridade
garantida por chaves prim√°rias e estrangeiras.
Escalabilidade
A arquitetura deve permitir a inclus√£o de novas funcionalidades sem refatora√ß√µes
extensas.
5. Tecnologias Sugeridas
‚Ä¢ Front-End: HTML5, CSS3, JavaScript, Bootstrap
‚Ä¢ Back-End: C# ou Node.js (express)
‚Ä¢ Banco de Dados: MySQL ou SQLite


--- PAGE 2 ---

6. Etapas do Projeto
‚Ä¢ 1‚Äì2: An√°lise de requisitos, levantamento de regras e defini√ß√£o de escopo
‚Ä¢ 3‚Äì4: Modelagem do banco de dados relacional
‚Ä¢ 5‚Äì6: Cria√ß√£o de wireframes e prot√≥tipos de interface
‚Ä¢ 7‚Äì8: Implementa√ß√£o do backend (cadastro, autentica√ß√£o, API REST)
‚Ä¢ 9‚Äì10: Desenvolvimento do frontend (telas, formul√°rios, integra√ß√£o com API)
‚Ä¢ 11‚Äì12: Implementa√ß√£o dos relat√≥rios e testes
‚Ä¢ 13: Refino, corre√ß√µes, testes de usabilidade
‚Ä¢ 14: Documenta√ß√£o t√©cnica e manual do usu√°rio
‚Ä¢ 15: Apresenta√ß√£o final
8. Poss√≠veis Extens√µes da Solu√ß√£o
‚Ä¢ Exporta√ß√£o de relat√≥rios em PDF
‚Ä¢ Dashboard com gr√°ficos de desempenho
‚Ä¢ Integra√ß√£o com APIs externas de pagamento ou doa√ß√µes
‚Ä¢ √Årea de comunica√ß√£o entre mentor e equipe (chat interno)
‚Ä¢ Notifica√ß√µes por e-mail ou SMS
Obs: Cada equipe pode propor e implementar suas pr√≥prias extens√µes.


--- PAGE 3 ---

ENTREG√ÅVEIS
Data das entregas 22/Sep 10/nov 17/11 - 25/11
Apresenta√ß√£o (3,0
Disciplinas
Entrega 1 (3,0 Pontos) Entrega 2 (4,0 Pontos) Pontos)
Requisitos: Implemente ao menos 2 tabelas
no banco de dados do projeto, com as
Requisitos: Modele o banco de dados do projeto,
seguintes caracter√≠sticas:
criando um diagrama que represente as tabelas,
Defina os campos adequados para cada
rela√ß√µes, chaves prim√°rias e estrangeiras, e qualquer
tabela.
outra estrutura necess√°ria para o funcionamento
Estabele√ßa chaves prim√°rias e, se
adequado do sistema.
necess√°rio, chaves estrangeiras para
A modelagem deve abranger todas as entidades
garantir relacionamentos entre as tabelas.
relevantes para o projeto e suas intera√ß√µes.
As tabelas devem refletir as entidades e
Formato de Entrega: Insira o diagrama de
dados essenciais para o projeto.
modelagem do banco de dados ou uma descri√ß√£o Formato de entrega:
Formato de Entrega: Insira a descri√ß√£o das
detalhada das tabelas e relacionamentos no arquivo Banner e Pitch de 4
tabelas implementadas (estrutura e campos) minutos.
Projetos em Banco de Dados README localizado na pasta BD.
no arquivo README localizado na pasta
No README principal do projeto, adicione um link
BD. Crit√©rios: Criatividade,
que direcione para o arquivo README da pasta BD,
No README principal do projeto, adicione Impacto Social,Tempo de
facilitando o acesso √† modelagem do banco de
um link que direcione para o arquivo apresenta√ß√£o e
dados.
README da pasta BD. Embasamento.
Organiza√ß√£o: Verifique se o diagrama ou a
Organiza√ß√£o: Certifique-se de que a
descri√ß√£o est√° clara e bem estruturada, com as
descri√ß√£o das tabelas esteja bem
tabelas e relacionamentos bem definidos.
estruturada e clara, com os campos e tipos
Assegure-se de que o link no README principal
de dados especificados de forma precisa.
esteja funcionando corretamente e direciona para o
Verifique se o link no README principal
arquivo na pasta BD.
est√° funcionando corretamente e direciona
para o arquivo README da pasta BD.
Desenvolvimento Web Full
ANEXO 1 ANEXO 2
Stack


--- PAGE 4 ---

Mapa de Processos - Diagrama /
Apresenta√ß√£o da Miss√£o, Vis√£o e Valores / Proposta Fluxograma de um Processo-chave
de Valor da Empresa Descri√ß√£o: Os alunos devem modelar um
Descri√ß√£o: Devem revisar ou definir a miss√£o, vis√£o e processo da empresa, escolhendo uma
valores da empresa. Devem demonstrar como esses opera√ß√£o central e representando-a em um
elementos impactam diretamente na gest√£o da fluxograma. Conte√∫do m√≠nimo obrigat√≥rio:
empresa e no site. Al√©m disso, devem incluir a Escolha e justificativa do processo
proposta de valor, explicando qual problema a modelado. Diagrama do fluxo do processo
Gest√£o Empresarial e
empresa resolve para seus clientes e como se com in√≠cio, etapas e fim. Identifica√ß√£o de
Din√¢minas das Organiza√ß√µes
diferencia da concorr√™ncia. Formato de Entrega: poss√≠veis gargalos e melhorias. Formato de
Documento em PDF (at√© 3 p√°ginas). Fonte padr√£o Entrega: Arquivo em PDF contendo o
Arial, tamanho 12, espa√ßamento 1.5. Crit√©rios de diagrama e a explica√ß√£o textual (m√°ximo de
Avalia√ß√£o: Clareza e coer√™ncia na defini√ß√£o de 2 p√°ginas). Crit√©rios de Avalia√ß√£o: Correta
miss√£o, vis√£o e valores. Rela√ß√£o entre esses representa√ß√£o do processo com come√ßo,
conceitos e a gest√£o da empresa/site. Qualidade da meio e fim. Clareza e coer√™ncia no
proposta de valor e diferencia√ß√£o do neg√≥cio. mapeamento das etapas. Identifica√ß√£o de
poss√≠veis melhorias.
C√°lculo de M√°ximos e M√≠nimos Aplicado
ao Website
Aplica√ß√£o do Polin√¥mio de Taylor na Modelagem Objetivo:
de Vari√°veis Relacionadas ao Website Os alunos devem utilizar derivadas para
calcular os pontos de m√°ximo e m√≠nimo de
Objetivo: uma fun√ß√£o polinomial relacionada ao
Os alunos devem escolher uma vari√°vel relevante ao funcionamento do website que est√£o
tema do website que est√£o desenvolvendo, definir desenvolvendo.
uma fun√ß√£o ùëì(ùë•) que modele esse comportamento e
utilizar o Polin√¥mio de Taylor de ordem 3 para obter Conte√∫do esperado:
C√°lculo II
uma aproxima√ß√£o matem√°tica dessa fun√ß√£o.
Defini√ß√£o da Fun√ß√£o Relacionada ao
O objetivo √© demonstrar como a S√©rie de Taylor pode Website
ser usada para previs√µes, simplifica√ß√µes
computacionais ou otimiza√ß√µes no contexto do site. Escolha de um fen√¥meno no site que possa
ser modelado matematicamente. Exemplos:
Conte√∫do esperado: -Taxa de visitas ao longo do tempo
Escolha de uma Vari√°vel Relevante ao Website (modelando o crescimento de acessos).
Cada aluno deve definir uma vari√°vel relacionada ao -Engajamento do usu√°rio (como a intera√ß√£o
funcionamento do seu site e criar uma fun√ß√£o ùëì (ùë•) varia ao longo do dia).
que descreva esse comportamento. -Tempo de carregamento do site em


--- PAGE 5 ---

diferentes condi√ß√µes.
Construa a fun√ß√£o polinomial baseada na
vari√°vel escolhida e represente
gr√°ficamente.
Preenchimento e Entrega da
Documenta√ß√£o do Projeto de Extens√£o: A
Prototipa√ß√£o Naveg√°vel no Figma: A prototipa√ß√£o documenta√ß√£o do projeto √© uma parte
naveg√°vel √© uma etapa crucial no processo de essencial para garantir que todas as
desenvolvimento de um projeto, pois permite testar a informa√ß√µes relacionadas ao
intera√ß√£o e o fluxo entre as telas antes de iniciar a desenvolvimento, objetivos, cronograma, e
codifica√ß√£o. Usar ferramentas como o Figma para resultados estejam devidamente registradas
Projeto Interdisciplinar: criar prot√≥tipos ajuda a visualizar a experi√™ncia do e organizadas. Ela tamb√©m ajuda na
Programa√ß√£o Web usu√°rio, validar ideias e fazer ajustes baseados em avalia√ß√£o do projeto e garante a
feedbacks reais. compreens√£o de todas as partes envolvidas,
A seguir, apresento uma estrutura geral de como como orientadores, alunos, e stakeholders.
voc√™ pode organizar e criar um prot√≥tipo naveg√°vel Para o seu Projeto de Extens√£o, a
no Figma para o seu projeto de gest√£o de usu√°rios documenta√ß√£o deve ser clara, objetiva, e
com autentica√ß√£o e CRUD. bem estruturada. A seguir, apresento um
modelo de como organizar e preencher essa
documenta√ß√£o para a entrega final.
Tecnologias que utilizam: React.Js, Node.Js e
Detalhes do projeto:
JavaScript


--- PAGE 6 ---

ANEXO 1
1¬™ Entrega do Projeto Interdisciplinar (PI)
Nome da Entrega: Estrutura Inicial do Projeto Web Full Stack
Objetivo da Entrega:
Entregar a primeira vers√£o funcional do projeto web, contendo:
‚óè Frontend est√°tico e reativo com HTML, CSS, JavaScript e React
‚óè Backend funcional com Node.js, Express e MySQL
‚óè Integra√ß√£o parcial entre frontend e backend
‚óè Estrutura organizada e modularizada, com navega√ß√£o e interatividade
Conte√∫dos contemplados (Aulas 1 a 8):
‚óè Configura√ß√£o do ambiente (VS Code, extens√µes)
‚óè HTML5 sem√¢ntico e responsivo
‚óè CSS com Flexbox e Grid
‚óè JavaScript com manipula√ß√£o do DOM
‚óè Introdu√ß√£o ao React (JSX, componentes, props, estado)
‚óè Cria√ß√£o de formul√°rios controlados
‚óè Cria√ß√£o de API com Express
‚óè Opera√ß√µes de CRUD b√°sicas com MySQL
Requisitos T√©cnicos
Frontend:
1. Projeto React funcional com ao menos 3 componentes (ex: Header, Home, Card).
2. Layout responsivo com CSS Flexbox ou Grid.
3. P√°gina inicial naveg√°vel e formul√°rio funcional (ex: cadastro de item).
4. Manipula√ß√£o de eventos e uso de useState.
5. Estiliza√ß√£o consistente e sem redund√¢ncias.


--- PAGE 7 ---

Backend:
1. Estrutura Node.js com Express, organizada em rotas e controladores.
2. Banco de dados MySQL com ao menos uma tabela (ex: not√≠cias, produtos, usu√°rios).
3. Implementa√ß√£o das opera√ß√µes Create, Read, Update e Delete.
4. Uso de Postman para testes locais das rotas.
Integra√ß√£o (m√≠nima e parcial):
1. O frontend deve listar ou enviar dados para o backend (ex: cadastrar e exibir not√≠cias).
2. Uso de fetch() ou axios no React para conectar √† API criada.
Ferramentas Recomendadas:
‚óè Visual Studio Code
‚óè React + Vite
‚óè Node.js + Express
‚óè MySQL + Workbench
‚óè Postman
‚óè Netlify
‚óè Firebase, Railway, Vercel
Deploy obrigat√≥rio
‚óè Frontend: Netlify ou Vercel
‚óè Backend: Railway, Render, ou similar
‚óè Alunos devem apresentar os dois links p√∫blicos funcionando
‚óè Reposit√≥rio Git com c√≥digo-fonte deve conter README estruturado, incluindo:
‚óã Descri√ß√£o do projeto
‚óã Rotas da API
‚óã Como rodar o projeto localmente
‚óã V√≠deo demonstrativo


--- PAGE 8 ---

Observa√ß√µes:
‚óè Cada grupo deve apresentar o projeto funcionando, acess√≠vel por links p√∫blicos.
‚óè O c√≥digo deve estar organizado, leg√≠vel e modularizado.
‚óè O professor poder√° solicitar acesso ao c√≥digo-fonte e √† API via navegador ou Postman.
‚óè O professor poder√° fazer perguntas t√©cnicas para verificar dom√≠nio do conte√∫do.
‚óè A vers√£o final do projeto ser√° complementada na segunda entrega (PI2), com recursos como
autentica√ß√£o, upload de imagens e deploy.


--- PAGE 9 ---

ANEXO 2
2¬™ Entrega do Projeto Interdisciplinar (PI)
Nome da Entrega: Projeto Web Full Stack Finalizado com Funcionalidades Avan√ßadas e Deploy
Objetivo da Entrega
Entregar a vers√£o final do projeto integrador Full Stack com todas as funcionalidades implementadas,
integrando frontend com React e backend com Node.js + MySQL, com upload de imagens, autentica√ß√£o
com JWT, rotas protegidas, estiliza√ß√£o aprimorada, e deploy completo das duas camadas da aplica√ß√£o.
Conte√∫dos contemplados (Aulas 10 a 16):
‚óè Upload de imagens com Multer
‚óè Autentica√ß√£o com Bcrypt e JWT
‚óè Integra√ß√£o real Frontend ‚Üî Backend com fetch/axios
‚óè React Router DOM e navega√ß√£o entre rotas
‚óè Estiliza√ß√£o com CSS avan√ßado e acessibilidade b√°sica
‚óè Testes de funcionalidades e valida√ß√µes
‚óè Deploy completo do sistema
Requisitos T√©cnicos
Frontend (React):
‚óè SPA completa com navega√ß√£o via React Router DOM
‚óè Componentes reutiliz√°veis com props e useState
‚óè Consumo de API com fetch ou axios, incluindo rotas autenticadas
‚óè Armazenamento e uso do token JWT
‚óè Layout responsivo com Flexbox/Grid e transi√ß√µes visuais
‚óè Mensagens de erro e loading.
‚óè Formul√°rios controlados com valida√ß√µes b√°sicas
‚óè Deploy no Netlify ou Vercel
Backend (Node.js + Express + MySQL):


--- PAGE 10 ---

‚óè API REST completa com rotas protegidas por middleware JWT
‚óè Upload de imagens com Multer (armazenamento local ou remoto)
‚óè Criptografia de senhas com Bcrypt
‚óè Conex√£o com banco de dados relacional
‚óè Organiza√ß√£o modular: rotas, controladores, middlewares, models
‚óè Respostas estruturadas com status HTTP apropriados
‚óè Vari√°veis de ambiente separadas
‚óè Deploy no Render, Railway ou outro servi√ßo compat√≠vel
Integra√ß√£o obrigat√≥ria:
‚óè Frontend deve consumir a API hospedada
‚óè Funcionalidades de login e acesso autenticado
‚óè CRUD completo e funcional
‚óè Envio de imagens via formul√°rio
Deploy obrigat√≥rio
‚óè Frontend: Netlify ou Vercel
‚óè Backend: Railway, Render, ou similar
‚óè Alunos devem apresentar os dois links p√∫blicos funcionando
‚óè Reposit√≥rio Git com c√≥digo-fonte deve conter README estruturado, incluindo:
‚óã Descri√ß√£o do projeto
‚óã Rotas da API
‚óã Como rodar o projeto localmente
‚óã V√≠deo demonstrativo
Dicas e Recomenda√ß√µes
‚óè Teste o projeto completo antes da apresenta√ß√£o.
‚óè Deixe o c√≥digo limpo, sem console.log ou arquivos n√£o utilizados.
‚óè O professor poder√° testar o sistema ao vivo e solicitar explica√ß√µes sobre trechos do c√≥digo.


--- PAGE 11 ---

